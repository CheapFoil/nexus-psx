local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==6) then v40=nil;function v40()local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==3) then for v92=1,v35() do v45[v92-1 ]=v40();end return v47;end if (v43==1) then v47={v44,v45,nil,v46};v48=v35();v49={};v43=2;end if (v43==2) then for v94=1,v48 do local v95=0;local v96;local v97;while true do if (v95==0) then v96=v33();v97=nil;v95=1;end if (v95==1) then if (v96==1) then v97=v33()~=0 ;elseif (v96==(1 + 1)) then v97=v36();elseif (v96==3) then v97=v37();end v49[v94]=v97;break;end end end v47[3]=v33();for v98=1,v35() do local v99=v33();if (v32(v99,1,1)==0) then local v120=v32(v99,2,3);local v121=v32(v99,4,6);local v122={v34(),v34(),nil,nil};if (v120==0) then local v129=0;while true do if (v129==0) then v122[1640 -(1523 + 114) ]=v34();v122[4]=v34();break;end end elseif (v120==(1 + 0)) then v122[3]=v35();elseif (v120==2) then v122[3 -0 ]=v35() -(2^16) ;elseif (v120==3) then local v142=0;while true do if (v142==0) then v122[1068 -(68 + 997) ]=v35() -(2^16) ;v122[4]=v34();break;end end end if (v32(v121,1,1)==1) then v122[2]=v49[v122[1272 -(226 + 1044) ]];end if (v32(v121,2,2)==1) then v122[3]=v49[v122[3]];end if (v32(v121,3,3)==1) then v122[4]=v49[v122[4]];end v44[v98]=v122;end end v43=3;end if (v43==0) then v44={};v45={};v46={};v43=1;end end end v41=nil;v29=7;end if (5==v29) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (3==v29) then v35=nil;function v35()local v50=0;local v51;local v52;local v53;local v54;while true do if (v50==0) then v51,v52,v53,v54=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v50=1;end if (1==v50) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end end end v36=nil;v29=4;end if (1==v29) then v32=nil;function v32(v55,v56,v57)if v57 then local v82=0;local v83;while true do if (v82==0) then v83=(v55/(2^(v56-1)))%(2^(((v57-1) -(v56-1)) + 1)) ;return v83-(v83%1) ;end end else local v84=0;local v85;while true do if (v84==0) then v85=2^(v56-(2 -1)) ;return (((v55%(v85 + v85))>=v85) and 1) or 0 ;end end end end v33=nil;v29=2;end if (v29==4) then function v36()local v58=0;local v59;local v60;local v61;local v62;local v63;local v64;while true do if (v58==3) then if (v63==0) then if (v62==0) then return v64 * (619 -(555 + 64)) ;else v63=1;v61=931 -(857 + 74) ;end elseif (v63==2047) then return ((v62==0) and (v64 * (1/0))) or (v64 * NaN) ;end return v16(v64,v63-1023 ) * (v61 + (v62/((570 -(367 + 201))^52))) ;end if (v58==0) then v59=v35();v60=v35();v58=1;end if (v58==1) then v61=1;v62=(v32(v60,1,20) * (2^32)) + v59 ;v58=2;end if (2==v58) then v63=v32(v60,21,31);v64=((v32(v60,82 -50 )==1) and  -1) or 1 ;v58=3;end end end v37=nil;function v37(v65)local v66=0;local v67;local v68;while true do if (v66==2) then v68={};for v100=1, #v67 do v68[v100]=v10(v9(v11(v67,v100,v100)));end v66=3;end if (v66==1) then v67=v11(v27,v30,(v30 + v65) -1 );v30=v30 + v65 ;v66=2;end if (v66==3) then return v14(v68);end if (v66==0) then v67=nil;if  not v65 then local v117=0;while true do if (v117==0) then v65=v35();if (v65==(927 -(214 + 713))) then return "";end break;end end end v66=1;end end end v29=5;end if (v29==2) then function v33()local v69=0;local v70;while true do if (1==v69) then return v70;end if (v69==0) then v70=v9(v27,v30,v30);v30=v30 + 1 ;v69=1;end end end v34=nil;function v34()local v71=0;local v72;local v73;while true do if (v71==0) then v72,v73=v9(v27,v30,v30 + (5 -3) );v30=v30 + (3 -1) ;v71=1;end if (v71==1) then return (v73 * 256) + v72 ;end end end v29=3;end if (0==v29) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\80\242","\55\126\220\49\197\202\67"),function(v74)if (v9(v74,2)==79) then local v86=0;while true do if (v86==0) then v31=v8(v11(v74,1,1));return "";end end else local v87=v10(v8(v74,16));if v31 then local v102=v13(v87,v31);v31=nil;return v102;else return v87;end end end);v29=1;end if (v29==7) then function v41(v75,v76,v77)local v78=0;local v79;local v80;local v81;while true do if (1==v78) then v81=v75[12 -9 ];return function(...)local v103=v79;local v104=v80;local v105=v81;local v106=v39;local v107=1;local v108= -1;local v109={};local v110={...};local v111=v20("#",...) -1 ;local v112={};local v113={};for v118=0,v111 do if (v118>=v105) then v109[v118-v105 ]=v110[v118 + 1 + 0 ];else v113[v118]=v110[v118 + 1 ];end end local v114=(v111-v105) + 1 ;local v115;local v116;while true do local v119=0;while true do if (v119==1) then if (v116<=42) then if (v116<=20) then if (v116<=9) then if (v116<=4) then if (v116<=1) then if (v116==0) then local v145=0;local v146;while true do if (0==v145) then v146=v115[2];do return v21(v113,v146,v108);end break;end end else v113[v115[2]]={};end elseif (v116<=(959 -(892 + 65))) then local v148=0;local v149;local v150;while true do if (v148==1) then for v345=v149 + 1 ,v108 do v15(v150,v113[v345]);end break;end if (v148==0) then v149=v115[2];v150=v113[v149];v148=1;end end elseif (v116>3) then local v234=0;local v235;while true do if (v234==0) then v235=v115[2];v113[v235]=v113[v235](v21(v113,v235 + 1 ,v108));break;end end else do return;end end elseif (v116<=6) then if (v116>5) then if  not v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end else local v151=v115[2];local v152,v153=v106(v113[v151](v21(v113,v151 + 1 ,v108)));v108=(v153 + v151) -1 ;local v154=0;for v229=v151,v108 do v154=v154 + 1 ;v113[v229]=v152[v154];end end elseif (v116<=7) then v113[v115[2]]=v115[3];elseif (v116==8) then v113[v115[2]]={};else v113[v115[2]]=v77[v115[3]];end elseif (v116<=14) then if (v116<=11) then if (v116>(23 -13)) then v113[v115[2]]=v113[v115[3]] + v115[6 -2 ] ;else local v158=0;local v159;while true do if (v158==0) then v159=v115[2];v113[v159]=v113[v159](v21(v113,v159 + 1 ,v115[3]));break;end end end elseif (v116<=12) then v113[v115[2]][v113[v115[3]]]=v115[4];elseif (v116==13) then v113[v115[2]]=v115[3] + v113[v115[4]] ;else v107=v115[3];end elseif (v116<=(31 -14)) then if (v116<=15) then v113[v115[2]]=v76[v115[3]];elseif (v116>16) then if  not v113[v115[2]] then v107=v107 + (351 -(87 + 263)) ;else v107=v115[3];end else v113[v115[2]][v115[3]]=v113[v115[4]];end elseif (v116<=18) then local v164=0;local v165;while true do if (v164==0) then v165=v115[2];v113[v165]=v113[v165](v21(v113,v165 + 1 ,v115[3]));break;end end elseif (v116>19) then v113[v115[2]]=v113[v115[183 -(67 + 113) ]] + v115[3 + 1 ] ;else local v245=0;local v246;local v247;while true do if (v245==1) then for v370=v246 + 1 ,v108 do v15(v247,v113[v370]);end break;end if (v245==0) then v246=v115[2];v247=v113[v246];v245=1;end end end elseif (v116<=(75 -44)) then if (v116<=25) then if (v116<=22) then if (v116>21) then local v166=v115[2];local v167=v113[v166];local v168=v113[v166 + 2 ];if (v168>0) then if (v167>v113[v166 + 1 ]) then v107=v115[3];else v113[v166 + 3 ]=v167;end elseif (v167<v113[v166 + 1 ]) then v107=v115[3];else v113[v166 + 3 ]=v167;end else local v169=0;local v170;local v171;local v172;while true do if (v169==2) then if (v171>(0 + 0)) then if (v172<=v113[v170 + (3 -2) ]) then local v399=0;while true do if (v399==0) then v107=v115[3];v113[v170 + 3 ]=v172;break;end end end elseif (v172>=v113[v170 + (953 -(802 + 150)) ]) then local v400=0;while true do if (0==v400) then v107=v115[3];v113[v170 + 3 ]=v172;break;end end end break;end if (v169==1) then v172=v113[v170] + v171 ;v113[v170]=v172;v169=2;end if (v169==0) then v170=v115[2];v171=v113[v170 + 2 ];v169=1;end end end elseif (v116<=23) then v113[v115[2]]=v113[v115[3]]%v115[10 -6 ] ;elseif (v116>24) then v113[v115[2]]=v115[3] + v113[v115[6 -2 ]] ;else v113[v115[2]]= #v113[v115[3 + 0 ]];end elseif (v116<=28) then if (v116<=26) then v113[v115[2]]();elseif (v116>27) then local v250=v115[2];local v251,v252=v106(v113[v250](v21(v113,v250 + 1 ,v115[3])));v108=(v252 + v250) -1 ;local v253=0;for v318=v250,v108 do local v319=0;while true do if (v319==0) then v253=v253 + 1 ;v113[v318]=v251[v253];break;end end end else local v254=v115[2];v113[v254](v113[v254 + 1 ]);end elseif (v116<=29) then local v174=v115[2];v113[v174](v21(v113,v174 + (998 -(915 + 82)) ,v108));elseif (v116>30) then local v255=0;local v256;while true do if (v255==0) then v256=v115[2];do return v113[v256](v21(v113,v256 + 1 ,v115[3]));end break;end end else local v257=v115[2];local v258,v259=v106(v113[v257]());v108=(v259 + v257) -(2 -1) ;local v260=0;for v320=v257,v108 do v260=v260 + 1 ;v113[v320]=v258[v260];end end elseif (v116<=36) then if (v116<=33) then if (v116==32) then v113[v115[2]]=v41(v104[v115[2 + 1 ]],nil,v77);else v77[v115[3]]=v113[v115[2]];end elseif (v116<=34) then v113[v115[2]]=v113[v115[3]][v115[4]];elseif (v116>35) then v113[v115[2]][v115[3]]=v115[4];else v77[v115[3]]=v113[v115[2]];end elseif (v116<=39) then if (v116<=37) then local v180=0;local v181;while true do if (v180==0) then v181=v115[2];v113[v181]=v113[v181](v21(v113,v181 + (1 -0) ,v108));break;end end elseif (v116>38) then v113[v115[2]]=v41(v104[v115[3]],nil,v77);else v113[v115[2]][v115[3]]=v115[4];end elseif (v116<=40) then local v182=0;local v183;local v184;local v185;while true do if (v182==1) then v185=v113[v183 + 2 ];if (v185>0) then if (v184>v113[v183 + 1 ]) then v107=v115[6 -3 ];else v113[v183 + 3 ]=v184;end elseif (v184<v113[v183 + 1 ]) then v107=v115[3];else v113[v183 + 3 ]=v184;end break;end if (v182==0) then v183=v115[1189 -(1069 + 118) ];v184=v113[v183];v182=1;end end elseif (v116==41) then v113[v115[2]]=v115[3]~=0 ;else do return;end end elseif (v116<=63) then if (v116<=52) then if (v116<=47) then if (v116<=44) then if (v116==43) then v113[v115[2]]=v113[v115[3]]%v115[4] ;else v113[v115[2]]=v115[6 -3 ]~=0 ;end elseif (v116<=(8 + 37)) then v113[v115[3 -1 ]]=v113[v115[3]][v115[4 + 0 ]];elseif (v116>46) then v113[v115[2]]= #v113[v115[794 -(368 + 423) ]];else local v270=v115[2];v113[v270]=v113[v270]();end elseif (v116<=49) then if (v116>(150 -102)) then v113[v115[2]]();else local v190=v115[2];local v191,v192=v106(v113[v190](v21(v113,v190 + 1 ,v108)));v108=(v192 + v190) -1 ;local v193=0;for v232=v190,v108 do local v233=0;while true do if (v233==0) then v193=v193 + 1 ;v113[v232]=v191[v193];break;end end end end elseif (v116<=50) then local v194=0;local v195;local v196;local v197;local v198;while true do if (2==v194) then for v353=v195,v108 do local v354=0;while true do if (v354==0) then v198=v198 + 1 ;v113[v353]=v196[v198];break;end end end break;end if (v194==0) then v195=v115[2];v196,v197=v106(v113[v195](v113[v195 + 1 ]));v194=1;end if (1==v194) then v108=(v197 + v195) -1 ;v198=0;v194=2;end end elseif (v116==51) then local v272=v115[2];v113[v272](v21(v113,v272 + 1 ,v115[3]));else local v273=0;local v274;local v275;local v276;while true do if (0==v273) then v274=v104[v115[3]];v275=nil;v273=1;end if (v273==1) then v276={};v275=v18({},{[v7("\59\248\205\80\51\22\28","\115\100\167\164\62\87")]=function(v373,v374)local v375=v276[v374];return v375[1][v375[2]];end,[v7("\22\191\88\218\62\137\88\219\44\152","\191\73\224\54")]=function(v376,v377,v378)local v379=v276[v377];v379[1][v379[2]]=v378;end});v273=2;end if (v273==2) then for v381=1,v115[4] do v107=v107 + 1 ;local v382=v103[v107];if (v382[1]==(102 -(10 + 8))) then v276[v381-1 ]={v113,v382[3]};else v276[v381-1 ]={v76,v382[3]};end v112[ #v112 + 1 ]=v276;end v113[v115[2]]=v41(v274,v275,v77);break;end end end elseif (v116<=57) then if (v116<=54) then if (v116>53) then if (v113[v115[2]]==v115[4]) then v107=v107 + 1 ;else v107=v115[3];end else v113[v115[444 -(416 + 26) ]][v115[3]]=v113[v115[12 -8 ]];end elseif (v116<=(24 + 31)) then local v201=v115[2];do return v21(v113,v201,v108);end elseif (v116>56) then if (v113[v115[2]]==v115[4]) then v107=v107 + 1 ;else v107=v115[3];end else local v278=v115[2];v113[v278]=v113[v278]();end elseif (v116<=60) then if (v116<=58) then v113[v115[2]]=v113[v115[3]];elseif (v116>59) then v113[v115[3 -1 ]]=v113[v115[3]]%v113[v115[442 -(145 + 293) ]] ;else v113[v115[2]]=v113[v115[3]]%v113[v115[434 -(44 + 386) ]] ;end elseif (v116<=61) then local v204=0;local v205;local v206;local v207;local v208;while true do if (v204==1) then v108=(v207 + v205) -1 ;v208=0;v204=2;end if (v204==0) then v205=v115[2];v206,v207=v106(v113[v205]());v204=1;end if (v204==2) then for v356=v205,v108 do v208=v208 + 1 ;v113[v356]=v206[v208];end break;end end elseif (v116>(1548 -(998 + 488))) then v113[v115[2]][v113[v115[3]]]=v113[v115[4]];else for v330=v115[1 + 1 ],v115[3] do v113[v330]=nil;end end elseif (v116<=74) then if (v116<=68) then if (v116<=65) then if (v116==(53 + 11)) then local v209=v115[2];v113[v209](v21(v113,v209 + 1 ,v108));elseif v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=66) then v113[v115[2]]=v76[v115[3]];elseif (v116>67) then local v285=v115[774 -(201 + 571) ];v113[v285](v113[v285 + 1 ]);else local v286=0;local v287;local v288;local v289;while true do if (v286==0) then v287=v104[v115[3]];v288=nil;v286=1;end if (1==v286) then v289={};v288=v18({},{[v7("\216\61\243\199\227\7\226","\169\135\98\154")]=function(v384,v385)local v386=v289[v385];return v386[1][v386[2]];end,[v7("\244\72\42\81\234\58\198\207\114\60","\168\171\23\68\52\157\83")]=function(v387,v388,v389)local v390=0;local v391;while true do if (v390==0) then v391=v289[v388];v391[1][v391[2]]=v389;break;end end end});v286=2;end if (v286==2) then for v392=1,v115[4] do v107=v107 + (1139 -(116 + 1022)) ;local v393=v103[v107];if (v393[1]==84) then v289[v392-1 ]={v113,v393[3]};else v289[v392-1 ]={v76,v393[3]};end v112[ #v112 + 1 ]=v289;end v113[v115[2]]=v41(v287,v288,v77);break;end end end elseif (v116<=71) then if (v116<=69) then v113[v115[2]][v113[v115[3]]]=v113[v115[4]];elseif (v116==(255 -185)) then for v332=v115[2],v115[3] do v113[v332]=nil;end else v113[v115[2]]=v77[v115[3]];end elseif (v116<=72) then v107=v115[10 -7 ];elseif (v116==73) then v113[v115[861 -(814 + 45) ]][v113[v115[3]]]=v115[4];else local v294=v115[4 -2 ];local v295,v296=v106(v113[v294](v21(v113,v294 + 1 + 0 ,v115[3])));v108=(v296 + v294) -1 ;local v297=0;for v334=v294,v108 do local v335=0;while true do if (v335==0) then v297=v297 + 1 + 0 ;v113[v334]=v295[v297];break;end end end end elseif (v116<=79) then if (v116<=76) then if (v116==75) then local v215=0;local v216;local v217;local v218;while true do if (v215==0) then v216=v115[2];v217=v113[v216 + 2 ];v215=1;end if (v215==2) then if (v217>(885 -(261 + 624))) then if (v218<=v113[v216 + 1 ]) then v107=v115[3];v113[v216 + 3 ]=v218;end elseif (v218>=v113[v216 + 1 ]) then local v409=0;while true do if (v409==0) then v107=v115[3];v113[v216 + 3 ]=v218;break;end end end break;end if (1==v215) then v218=v113[v216] + v217 ;v113[v216]=v218;v215=2;end end else local v219=v115[2];local v220=v113[v115[3]];v113[v219 + (1 -0) ]=v220;v113[v219]=v220[v115[4]];end elseif (v116<=77) then local v224=0;local v225;while true do if (v224==0) then v225=v115[2];do return v113[v225](v21(v113,v225 + 1 ,v115[1083 -(1020 + 60) ]));end break;end end elseif (v116>78) then if v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end else local v298=v115[2];v113[v298](v21(v113,v298 + 1 ,v115[3]));end elseif (v116<=82) then if (v116<=80) then do return v113[v115[2]]();end elseif (v116>81) then v113[v115[2]]=v115[3];else do return v113[v115[2]]();end end elseif (v116<=83) then local v226=0;local v227;local v228;while true do if (1==v226) then v113[v227 + 1 ]=v228;v113[v227]=v228[v115[4]];break;end if (v226==0) then v227=v115[2];v228=v113[v115[3]];v226=1;end end elseif (v116==84) then v113[v115[2]]=v113[v115[3]];else local v303=0;local v304;local v305;local v306;local v307;while true do if (v303==0) then v304=v115[2];v305,v306=v106(v113[v304](v113[v304 + 1 ]));v303=1;end if (v303==2) then for v397=v304,v108 do local v398=0;while true do if (0==v398) then v307=v307 + 1 ;v113[v397]=v305[v307];break;end end end break;end if (v303==1) then v108=(v306 + v304) -1 ;v307=0;v303=2;end end end v107=v107 + 1 ;break;end if (0==v119) then v115=v103[v107];v116=v115[1 + 0 ];v119=1;end end end end;end if (v78==0) then v79=v75[1];v80=v75[2];v78=1;end end end return v41(v40(),{},v28)(...);end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.14) ~  Much Love, Ferib 

]]--

